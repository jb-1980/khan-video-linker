{"version":3,"sources":["components/navbar.js","components/atom-spinner.js","contexts/data-context.js","components/sidebar.js","components/pills.js","components/copy-button.js","components/code-container.js","index.js"],"names":["Navbar","react_default","a","createElement","className","css","_templateObject","atomSpinnerKey1","keyframes","atom_spinner_templateObject","atomSpinnerKey2","_templateObject2","atomSpinnerKey3","_templateObject3","AtomSpinner","_ref","_ref$color","color","_ref$size","size","props","Object","objectWithoutProperties","spinnerLine","_templateObject4","assign","_templateObject5","_templateObject6","_templateObject7","DataContext","React","createContext","initialState","videos","loading","error","fetchVideos","data","setData","length","localStorage","getItem","fetch","then","res","json","values","parseVideoData","Array","isArray","reduce","acc","child","children","objectSpread","kind","defineProperty","youtube_id","title","youtubeid","setItem","JSON","stringify","catch","err","console","parse","videoClass","sidebar_templateObject","addVideoClass","sidebar_templateObject2","Sidebar","selectedVideos","setSelectedVideos","_React$useState","useState","_React$useState2","slicedToArray","keyword","setKeyword","_useDataContext","useContext","refreshVideos","videoList","_ref2","hasSubstring","toLowerCase","includes","videoSelected","find","v","push","slice","map","_ref3","key","data-testid","onClick","toConsumableArray","concat","selectedVideosList","_ref4","filter","sidebar_templateObject3","style","display","flexDirection","alignItems","justifyContent","width","margin","atom_spinner_AtomSpinner","Fragment","height","border","background","marginRight","sidebar_templateObject4","onChange","e","target","value","placeholder","type","sidebar_templateObject5","listPill","pills_templateObject","selected","pills_templateObject2","Pills","render","tabs","_useState","id","_useState2","view","setView","listStyle","tab","pills_templateObject3","name","CopyButton","str","copied","setCopied","useEffect","setTimeout","copy_button_templateObject","copyToClipboard","copy_button_templateObject2","el","document","setAttribute","position","left","body","appendChild","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","baseUrl","createCodeString","video","i","youtubeId","createButton","join","CodeContainer","code_container_templateObject","pills_Pills","code_container_Code","code_container_RenderedCode","Code","renderString","copy_button_CopyButton","fontFamily","RenderedCode","backgroundColor","scrolling","src","code_container_templateObject2","rootElement","getElementById","ReactDOM","isCurrent","Provider","removeItem","navbar_Navbar","src_templateObject","sidebar_Sidebar","code_container_CodeContainer"],"mappings":"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","file":"static/js/main.a5ab5cd3.chunk.js","sourcesContent":["import React from \"react\"\nimport { css } from \"emotion\"\n\nexport const Navbar = () => (\n  <div\n    className={css`\n      background: #e91e63;\n      color: #fff;\n      width: 100%;\n      height: 50px;\n      line-height: 50px;\n      font-size: 30px;\n      font-family: monospace;\n      text-align: center;\n    `}\n  >\n    Khan Video Linker\n  </div>\n)\n","import React from \"react\"\nimport { css, keyframes } from \"emotion\"\n\nconst atomSpinnerKey1 = keyframes`\n100% {\n    transform: rotateZ(120deg) rotateX(66deg) rotateZ(360deg);\n  }\n`\n\nconst atomSpinnerKey2 = keyframes`\n100% {\n    transform: rotateZ(240deg) rotateX(66deg) rotateZ(360deg);\n  }\n`\n\nconst atomSpinnerKey3 = keyframes`\n100% {\n    transform: rotateZ(360deg) rotateX(66deg) rotateZ(360deg);\n  }\n`\n\nexport const AtomSpinner = ({ color = \"#e91e63\", size = \"40px\", ...props }) => {\n  const spinnerLine = css`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    animation-duration: 1s;\n    border-left-width: calc(${size} / 25);\n    border-top-width: calc(${size} / 25);\n    border-left-color: ${color};\n    border-left-style: solid;\n    border-top-style: solid;\n    border-top-color: transparent;\n    &:nth-child(1) {\n      animation: ${atomSpinnerKey1} 1s linear infinite;\n      transform: rotateZ(120deg) rotateX(66deg) rotateZ(0deg);\n    }\n    &:nth-child(2) {\n      animation: ${atomSpinnerKey2} 1s linear infinite;\n      transform: rotateZ(240deg) rotateX(66deg) rotateZ(0deg);\n    }\n    &:nth-child(3) {\n      animation: ${atomSpinnerKey3} 1s linear infinite;\n      transform: rotateZ(360deg) rotateX(66deg) rotateZ(0deg);\n    }\n  `\n\n  return (\n    <div\n      className={css`\n        box-sizing: border-box;\n        height: ${size};\n        width: ${size};\n        overflow: hidden;\n      `}\n      {...props}\n    >\n      <div\n        className={css`\n          position: relative;\n          display: block;\n          height: 100%;\n          width: 100%;\n        `}\n      >\n        <div className={spinnerLine} />\n        <div className={spinnerLine} />\n        <div className={spinnerLine} />\n        <div\n          className={css`\n            display: block;\n            position: absolute;\n            color: ${color};\n            font-size: calc(${size} * 0.24);\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n          `}\n        >\n          ●\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nconst DataContext = React.createContext({})\n\nconst initialState = {\n  videos: [],\n  loading: true,\n  error: null,\n}\n\nconst DataProvider = ({ children }) => {\n  const [data, setData] = React.useState(initialState)\n\n  const refreshVideos = () => {\n    localStorage.removeItem(\"khan-academy-videos\")\n    setData(initialState)\n  }\n\n  React.useEffect(() => {\n    let isCurrent = true\n    if (isCurrent) {\n      fetchVideos(data, setData)\n    }\n\n    return () => {\n      isCurrent = false\n    }\n  }, [data])\n\n  return (\n    <DataContext.Provider value={{ ...data, refreshVideos }}>\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nconst useDataContext = () => React.useContext(DataContext)\n\nexport const parseVideoData = data => {\n  if (Array.isArray(data)) {\n    return data.reduce((acc, child) => {\n      if (child.children) {\n        return { ...acc, ...parseVideoData(child.children) }\n      } else if (child.kind === \"Video\") {\n        return {\n          ...acc,\n          [child.youtube_id]: {\n            title: child.title,\n            youtubeid: child.youtube_id,\n          },\n        }\n      }\n      return acc\n    }, {})\n  }\n\n  if (data.children) {\n    return parseVideoData(data.children)\n  }\n\n  if (data.kind === \"Video\") {\n    return {\n      [data.youtube_id]: {\n        title: data.title,\n        youtubeid: data.youtube_id,\n      },\n    }\n  }\n}\n\nexport const fetchVideos = (data, setData) => {\n  // ran into COR problem with Khan Academy API. So I had to provision a\n  // proxy server. Because this is on a codesandbox free server, it hibernates.\n  // That makes it a really slow call.\n  // When https://github.com/Khan/khan-api/issues/139 is resolved change back to\n  // url = \"https://khanacademy.org/api/...\"\n  if (data.videos.length === 0 && data.error === null) {\n    let videos = localStorage.getItem(\"khan-academy-videos\")\n    if (videos === null) {\n      const url =\n        \"https://jgilgen.pythonanywhere.com/api/v1/topictree?kind=Video\"\n      fetch(url)\n        .then(res => res.json())\n        .then(json => {\n          videos = Object.values(parseVideoData(json))\n          localStorage.setItem(\"khan-academy-videos\", JSON.stringify(videos))\n          setData({\n            videos,\n            loading: false,\n            error: null,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          setData({\n            videos: [],\n            loading: false,\n            error: \"Error fetching data 😞\",\n          })\n        })\n    } else {\n      setData({\n        videos: JSON.parse(videos),\n        loading: false,\n        error: null,\n      })\n    }\n  }\n}\n\nexport { useDataContext, DataProvider }\n","import React from \"react\"\nimport { css } from \"emotion\"\n\nimport { AtomSpinner } from \"./atom-spinner\"\nimport { useDataContext } from \"../contexts/data-context\"\n\nconst videoClass = css`\n  color: #e91e63;\n  margin: 10px 0;\n  cursor: pointer;\n  font-family: monospace;\n`\nconst addVideoClass = css`\n  width: 20px;\n  height: 20px;\n  color: #fff;\n  background: #e91e63;\n  float: right;\n  font-size: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Sidebar = ({ selectedVideos, setSelectedVideos }) => {\n  const [keyword, setKeyword] = React.useState(\"\")\n  const { videos, loading, error, refreshVideos } = useDataContext()\n\n  // Use these to populate the two sidebar areas\n  const filteredVideos = videos.reduce((acc, { youtubeid, title }) => {\n    const hasSubstring = title.toLowerCase().includes(keyword.toLowerCase())\n    const videoSelected = selectedVideos.find(v => v.youtubeid === youtubeid)\n    if (hasSubstring && !videoSelected) {\n      acc.push({ youtubeid, title })\n    }\n\n    return acc\n  }, [])\n\n  const videoList = filteredVideos.slice(0, 10).map(({ youtubeid, title }) => (\n    <div\n      key={youtubeid}\n      data-testid={youtubeid}\n      className={videoClass}\n      onClick={() => {\n        const checkVideo = selectedVideos.find(v => v.youtubeid === youtubeid)\n        if (!checkVideo) {\n          setSelectedVideos([...selectedVideos, { youtubeid, title }])\n        }\n      }}\n    >\n      {title}\n      <div className={addVideoClass}>+</div>\n    </div>\n  ))\n\n  const selectedVideosList = selectedVideos.map(({ youtubeid, title }) => (\n    <div\n      key={youtubeid}\n      className={videoClass}\n      onClick={() =>\n        setSelectedVideos(selectedVideos.filter(v => v.youtubeid !== youtubeid))\n      }\n    >\n      {title}\n      <div className={addVideoClass}>-</div>\n    </div>\n  ))\n\n  return (\n    <div\n      className={css`\n        width: 40%;\n        background: #fff;\n        padding: 10px;\n      `}\n    >\n      {loading ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <h2 style={{ margin: 0 }}>Retrieving videos</h2>\n          <h4 style={{ margin: 0 }}>(this could take a minute)</h4>\n          <AtomSpinner />\n        </div>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n        <>\n          {selectedVideosList.length > 0 && (\n            <div data-testid=\"selected-videos\">\n              <h4>Selected Videos</h4>\n              <div data-testid=\"video-list\">{selectedVideosList}</div>\n              <hr\n                style={{\n                  height: 3,\n                  border: \"none\",\n                  background: \"#b0003a\",\n                }}\n              />\n            </div>\n          )}\n          <div>\n            <h4 style={{ display: \"inline-block\", marginRight: 20 }}>\n              Video finder\n            </h4>\n            <button\n              className={css`\n                display: inline-block;\n                background: #e91e63;\n                border: none;\n                color: #fff;\n                padding: 5px 7px;\n                border-radius: 5px;\n                font-family: monospace;\n                font-size: 1em;\n              `}\n              onClick={refreshVideos}\n            >\n              Refresh List\n            </button>\n          </div>\n          <input\n            onChange={e => setKeyword(e.target.value)}\n            value={keyword}\n            placeholder=\"Type to find a video\"\n            type=\"text\"\n            className={css`\n              border: none;\n              border-bottom: thick solid #e91e63;\n              width: 90%;\n              margin: 10px 0;\n            `}\n          />\n          <div data-testid=\"video-list\">{videoList}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { css } from \"emotion\"\n\nconst listPill = css`\n  display: inline-block;\n  margin: 0 10px;\n  position: relative;\n  padding: 0 0 5px 0;\n  cursor: pointer;\n`\n\nconst selected = css`\n  font-weight: bold;\n  color: #b0003a;\n  &:after {\n    content: \" \";\n    position: absolute;\n    width: 0;\n    height: 15px;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-bottom: 7px solid #b0003a;\n    left: 50%;\n    margin-left: -7px;\n    bottom: -3px;\n    display: block;\n  }\n`\n\nexport const Pills = ({ render, tabs }) => {\n  const [view, setView] = useState(tabs[0].id)\n\n  return (\n    <>\n      <div\n        style={{\n          listStyle: \"none\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n        }}\n      >\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className={css`\n              ${listPill};\n              ${view === tab.id && selected};\n            `}\n            onClick={() => setView(tab.id)}\n          >\n            {tab.name}\n          </li>\n        ))}\n      </div>\n      <hr\n        style={{\n          margin: 0,\n          height: 3,\n          background: \"#b0003a\",\n          width: \"100%\",\n          border: \"none\",\n        }}\n      />\n      {render(view)}\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { css } from \"emotion\"\n\nexport const CopyButton = ({ str }) => {\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => setCopied(false), 1000)\n    }\n  })\n\n  return (\n    <button\n      className={css`\n        display: inline-block;\n        background: #e91e63;\n        border: none;\n        color: #fff;\n        padding: 5px 7px;\n        border-radius: 5px;\n        font-family: monospace;\n        font-size: 1em;\n        float: right;\n        margin: 7px;\n        width: 150px;\n      `}\n      onClick={() => {\n        copyToClipboard(str)\n        setCopied(true)\n      }}\n    >\n      <span\n        className={css`\n          transition: opacity 3s cubic-bezier(0.02, 1.24, 0.27, 0.93);\n          opacity: ${copied ? 0.5 : 1};\n        `}\n      >\n        {copied ? \"copied\" : \"copy to clipboard\"}\n      </span>\n    </button>\n  )\n}\n\nexport const copyToClipboard = str => {\n  const el = document.createElement(\"textarea\") // Create a <textarea> element\n  el.value = str // Set its value to the string that you want copied\n  el.setAttribute(\"readonly\", \"\") // Make it readonly to be tamper-proof\n  el.style.position = \"absolute\"\n  el.style.left = \"-9999px\" // Move outside the screen to make it invisible\n  document.body.appendChild(el) // Append the <textarea> element to the HTML document\n  const selected =\n    document.getSelection().rangeCount > 0 // Check if there is any content selected previously\n      ? document.getSelection().getRangeAt(0) // Store selection if found\n      : false // Mark as false to know no selection existed before\n  el.select() // Select the <textarea> content\n  document.execCommand(\"copy\") // Copy - only works as a result of a user action (e.g. click events)\n  document.body.removeChild(el) // Remove the <textarea> element\n  if (selected) {\n    // If a selection existed before copying\n    document.getSelection().removeAllRanges() // Unselect everything on the HTML document\n    document.getSelection().addRange(selected) // Restore the original selection\n  }\n}\n","import React from \"react\"\nimport { css } from \"emotion\"\n\nimport { Pills } from \"./pills\"\nimport { CopyButton } from \"./copy-button\"\n\nconst baseUrl = \"https://www.khanacademy.org/embed_video?v=\"\n\nexport const createButton = (i, youtubeId) => `\n  <button\n    onclick=\"changeVideo('${baseUrl + youtubeId}')\"\n    style=\"\n      background: #089de3;\n      border: thin solid #089de3;\n      border-radius: 5px;\n      padding: 5px 9px;\n      margin: 0 3px;\n      color: #fff;\n    \"\n  >\n    Video ${i}\n  </button>\n`\n\nexport const createCodeString = selected => `\n<div>\n    <iframe\n    title=\"kaskill-ka-player\"\n    id=\"kaskill-ka-player\"\n    style=\"width:853px;height:480px;border:none;background-color:ghostwhite;margin:auto;\"\n    scrolling=\"no\"\n    src=\"https://www.khanacademy.org/embed_video?v=${selected[0]}\"\n    ></iframe>\n</div>\n<div>\n    ${selected.map((video, i) => createButton(i + 1, video)).join(\"\")}\n</div>\n<script type=\"text/javascript\">\n    function changeVideo(url){\n        document.getElementById(\"kaskill-ka-player\").src = url;\n    }\n</script>\n`\n\nexport const CodeContainer = ({ selectedVideos }) => {\n  const selected = selectedVideos.map(v => v.youtubeid)\n  return (\n    <div\n      className={css`\n        width: 60%;\n        text-align: left;\n        padding: 10px;\n      `}\n    >\n      {selected.length === 0 ? (\n        <h1>Please select a video</h1>\n      ) : (\n        <Pills\n          tabs={[\n            { id: \"code\", name: \"Code\" },\n            { id: \"rendered\", name: \"Rendered Code\" },\n          ]}\n          render={view =>\n            view === \"code\" ? (\n              <Code selected={selected} />\n            ) : (\n              <RenderedCode selected={selected} />\n            )\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport const Code = ({ selected }) => {\n  const renderString = createCodeString(selected)\n\n  return (\n    <>\n      <CopyButton str={renderString} />\n      <pre data-testid=\"code-string\" style={{ fontFamily: \"monospace\" }}>\n        {renderString}\n      </pre>\n    </>\n  )\n}\n\nconst RenderedCode = ({ selected }) => {\n  const [view, setView] = React.useState(selected[0])\n  return (\n    <div>\n      <div>\n        <iframe\n          id=\"kaskill-ka-player\"\n          title=\"kaskill-ka-player\"\n          style={{\n            width: \"853px\",\n            height: \"480px\",\n            border: \"none\",\n            backgroundColor: \"ghostwhite\",\n            margin: \"auto\",\n          }}\n          scrolling=\"no\"\n          src={baseUrl + view}\n        />\n      </div>\n      <div>\n        {selected.map((video, i) => (\n          <button\n            key={video}\n            onClick={() => setView(video)}\n            className={css`\n              background: #089de3;\n              border: thin solid #089de3;\n              border-radius: 5px;\n              padding: 5px 9px;\n              margin: 0 3px;\n              color: #fff;\n            `}\n          >\n            Video {i + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { css } from \"emotion\"\n\nimport { Navbar } from \"./components/navbar\"\nimport { Sidebar } from \"./components/sidebar\"\nimport { CodeContainer } from \"./components/code-container\"\nimport { DataProvider } from \"./contexts/data-context\"\nimport \"./styles.css\"\n\nconst App = () => {\n  const [selectedVideos, setSelectedVideos] = React.useState([])\n\n  return (\n    <>\n      <Navbar />\n      <div\n        className={css`\n          display: flex;\n          min-height: calc(100vh - 50px);\n          background: #eee;\n          text-align: left;\n        `}\n      >\n        <Sidebar\n          selectedVideos={selectedVideos}\n          setSelectedVideos={setSelectedVideos}\n        />\n        <CodeContainer selectedVideos={selectedVideos} />\n      </div>\n    </>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n  <DataProvider>\n    <App />\n  </DataProvider>,\n  rootElement\n)\n"],"sourceRoot":""}