{"version":3,"sources":["components/navbar.js","lib/utils.js","contexts/data-context.js","components/sidebar.js","components/pills.js","components/copy-button.js","components/code-container.js","index.js"],"names":["Navbar","react_default","a","createElement","className","css","_templateObject","fetchVideos","data","setData","videos","length","error","localStorage","getItem","fetch","then","res","json","Object","values","parseVideoData","Array","isArray","reduce","acc","child","children","objectSpread","kind","defineProperty","readable_id","youtube_id","title","setItem","JSON","stringify","loading","catch","err","console","parse","DataContext","React","createContext","initialState","videoClass","sidebar_templateObject","addVideoClass","_templateObject2","Sidebar","_ref","selectHandler","selected","_useState","useState","_useState2","slicedToArray","keyword","setKeyword","_useContext","useContext","refreshVideos","_videos$reduce","video","includes","filteredVideos","push","selectedVideos","videoList","slice","map","key","onClick","prevState","toConsumableArray","concat","selectedVideosList","filter","v","_templateObject3","Fragment","style","height","border","background","display","marginRight","_templateObject4","onChange","e","target","value","placeholder","type","_templateObject5","listPill","pills_templateObject","pills_templateObject2","Pills","render","tabs","id","view","setView","listStyle","flexDirection","width","tab","pills_templateObject3","name","margin","CopyButton","str","copied","setCopied","useEffect","setTimeout","copy_button_templateObject","el","document","setAttribute","position","left","body","appendChild","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","copyToClipboard","copy_button_templateObject2","baseUrl","CodeContainer","code_container_templateObject","pills_Pills","code_container_Code","code_container_RenderedCode","Code","_ref2","renderString","i","youtubeId","createButton","join","copy_button_CopyButton","fontFamily","RenderedCode","_ref3","backgroundColor","scrolling","src","code_container_templateObject2","rootElement","getElementById","ReactDOM","Provider","removeItem","setSelected","navbar_Navbar","src_templateObject","sidebar_Sidebar","code_container_CodeContainer"],"mappings":"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","file":"static/js/main.5f2722a0.chunk.js","sourcesContent":["import React from \"react\"\nimport { css } from \"emotion\"\n\nexport const Navbar = () => (\n  <div\n    className={css`\n      background: #e91e63;\n      color: #fff;\n      width: 100%;\n      height: 50px;\n      line-height: 50px;\n      font-size: 30px;\n      font-family: monospace;\n      text-align: center;\n    `}\n  >\n    Khan Video Linker\n  </div>\n)\n","export const parseVideoData = data => {\n  if (Array.isArray(data)) {\n    return data.reduce((acc, child) => {\n      if (child.children) {\n        return { ...acc, ...parseVideoData(child.children) }\n      } else if (child.kind === \"Video\") {\n        return {\n          ...acc,\n          [child.readable_id]: {\n            youtube_id: child.youtube_id,\n            title: child.title,\n          },\n        }\n      }\n    }, {})\n  }\n\n  if (data.children) {\n    return parseVideoData(data.children)\n  }\n\n  if (data.kind === \"Video\") {\n    return {\n      [data.readable_id]: {\n        youtube_id: data.youtube_id,\n        title: data.title,\n      },\n    }\n  }\n}\n\nexport const fetchVideos = (data, setData) => {\n  if (data.videos.length === 0 && data.error === null) {\n    let videos = localStorage.getItem(\"videos\")\n    if (videos === null) {\n      const url = \"https://www.khanacademy.org/api/v1/topictree?kind=Video\"\n      fetch(url)\n        .then(res => res.json())\n        .then(json => {\n          videos = Object.values(parseVideoData(json))\n          localStorage.setItem(\"videos\", JSON.stringify(videos))\n          setData({\n            videos,\n            loading: false,\n            error: null,\n          })\n        })\n        .catch(err => {\n          console.error(err)\n          setData({\n            videos: [],\n            loading: false,\n            error: \"there was an error while fetching the data\",\n          })\n        })\n    } else {\n      setData({\n        videos: JSON.parse(videos),\n        loading: false,\n        error: null,\n      })\n    }\n  }\n}\n\n// source https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = str => {\n  const el = document.createElement(\"textarea\") // Create a <textarea> element\n  el.value = str // Set its value to the string that you want copied\n  el.setAttribute(\"readonly\", \"\") // Make it readonly to be tamper-proof\n  el.style.position = \"absolute\"\n  el.style.left = \"-9999px\" // Move outside the screen to make it invisible\n  document.body.appendChild(el) // Append the <textarea> element to the HTML document\n  const selected =\n    document.getSelection().rangeCount > 0 // Check if there is any content selected previously\n      ? document.getSelection().getRangeAt(0) // Store selection if found\n      : false // Mark as false to know no selection existed before\n  el.select() // Select the <textarea> content\n  document.execCommand(\"copy\") // Copy - only works as a result of a user action (e.g. click events)\n  document.body.removeChild(el) // Remove the <textarea> element\n  if (selected) {\n    // If a selection existed before copying\n    document.getSelection().removeAllRanges() // Unselect everything on the HTML document\n    document.getSelection().addRange(selected) // Restore the original selection\n  }\n}\n","import React, { useState, useEffect } from \"react\"\n\nimport { fetchVideos } from \"../lib/utils\"\n\nconst DataContext = React.createContext({})\n\nconst initialState = {\n  videos: [],\n  loading: true,\n  error: null,\n}\n\nconst DataProvider = ({ children }) => {\n  const [data, setData] = useState(initialState)\n\n  const refreshVideos = () => {\n    localStorage.removeItem(\"videos\")\n    setData(initialState)\n  }\n\n  useEffect(() => fetchVideos(data, setData))\n\n  return (\n    <DataContext.Provider value={{ ...data, refreshVideos }}>\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nexport { DataContext, DataProvider }\n","import React, { useState, useContext } from \"react\"\nimport { css } from \"emotion\"\n\nimport { DataContext } from \"../contexts/data-context\"\n\nconst videoClass = css`\n  color: #e91e63;\n  margin: 10px 0;\n  cursor: pointer;\n  font-family: monospace;\n`\nconst addVideoClass = css`\n  width: 20px;\n  height: 20px;\n  color: #fff;\n  background: #e91e63;\n  float: right;\n  font-size: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Sidebar = ({ selectHandler, selected }) => {\n  const [keyword, setKeyword] = useState(\"\")\n  const { videos, loading, error, refreshVideos } = useContext(DataContext)\n  const { filteredVideos, selectedVideos } = videos.reduce(\n    (acc, video) => {\n      if (video.title.includes(keyword)) {\n        acc.filteredVideos.push(video)\n      }\n      if (selected.includes(video.youtube_id)) {\n        acc.selectedVideos.push(video)\n      }\n      return acc\n    },\n    { filteredVideos: [], selectedVideos: [] }\n  )\n\n  const videoList = filteredVideos.slice(0, 10).map(video => (\n    <div\n      key={video.youtube_id}\n      className={videoClass}\n      onClick={() =>\n        selectHandler(prevState =>\n          prevState.includes(video.youtube_id)\n            ? prevState\n            : [...prevState, video.youtube_id]\n        )\n      }\n    >\n      {video.title}\n      <div className={addVideoClass}>+</div>\n    </div>\n  ))\n\n  const selectedVideosList = selectedVideos.map(video => (\n    <div\n      key={video.youtube_id}\n      className={videoClass}\n      onClick={() =>\n        selectHandler(prevState =>\n          prevState.filter(v => v !== video.youtube_id)\n        )\n      }\n    >\n      {video.title}\n      <div className={addVideoClass}>-</div>\n    </div>\n  ))\n\n  return (\n    <div\n      className={css`\n        width: 40%;\n        background: #fff;\n        padding: 10px;\n      `}\n    >\n      {loading ? (\n        <h2> Retrieving video list ...</h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n        <>\n          {selectedVideosList.length > 0 && (\n            <>\n              <h4>Selected Videos</h4>\n              <div>{selectedVideosList}</div>\n              <hr\n                style={{\n                  height: 3,\n                  border: \"none\",\n                  background: \"#b0003a\",\n                }}\n              />\n            </>\n          )}\n          <div>\n            <h4 style={{ display: \"inline-block\", marginRight: 20 }}>\n              Video finder\n            </h4>\n            <button\n              className={css`\n                display: inline-block;\n                background: #e91e63;\n                border: none;\n                color: #fff;\n                padding: 5px 7px;\n                border-radius: 5px;\n                font-family: monospace;\n                font-size: 1em;\n              `}\n              onClick={refreshVideos}\n            >\n              Refresh List\n            </button>\n          </div>\n          <input\n            onChange={e => setKeyword(e.target.value)}\n            value={keyword}\n            placeholder=\"Type to find a video\"\n            type=\"text\"\n            className={css`\n              border: none;\n              border-bottom: thick solid #e91e63;\n              width: 90%;\n              margin: 10px 0;\n            `}\n          />\n          {videoList}\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState } from \"react\"\nimport { css } from \"emotion\"\n\nconst listPill = css`\n  display: inline-block;\n  margin: 0 10px;\n  position: relative;\n  padding: 0 0 5px 0;\n  cursor: pointer;\n`\n\nconst selected = css`\n  font-weight: bold;\n  color: #b0003a;\n  &:after {\n    content: \" \";\n    position: absolute;\n    width: 0;\n    height: 15px;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-bottom: 7px solid #b0003a;\n    left: 50%;\n    margin-left: -7px;\n    bottom: -3px;\n    display: block;\n  }\n`\n\nexport const Pills = ({ render, tabs }) => {\n  const [view, setView] = useState(tabs[0].id)\n\n  return (\n    <>\n      <div\n        style={{\n          listStyle: \"none\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n        }}\n      >\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className={css`\n              ${listPill};\n              ${view === tab.id && selected};\n            `}\n            onClick={() => setView(tab.id)}\n          >\n            {tab.name}\n          </li>\n        ))}\n      </div>\n      <hr\n        style={{\n          margin: 0,\n          height: 3,\n          background: \"#b0003a\",\n          width: \"100%\",\n          border: \"none\",\n        }}\n      />\n      {render(view)}\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { css } from \"emotion\"\n\nimport { copyToClipboard } from \"../lib/utils\"\n\nexport const CopyButton = ({ str }) => {\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => setCopied(false), 1000)\n    }\n  })\n\n  return (\n    <button\n      className={css`\n        display: inline-block;\n        background: #e91e63;\n        border: none;\n        color: #fff;\n        padding: 5px 7px;\n        border-radius: 5px;\n        font-family: monospace;\n        font-size: 1em;\n        float: right;\n        margin: 7px;\n        width: 150px;\n      `}\n      onClick={() => {\n        copyToClipboard(str)\n        setCopied(true)\n      }}\n    >\n      <span\n        className={css`\n          transition: opacity 3s cubic-bezier(0.02, 1.24, 0.27, 0.93);\n          opacity: ${copied ? 0.5 : 1};\n        `}\n      >\n        {copied ? \"copied\" : \"copy to clipboard\"}\n      </span>\n    </button>\n  )\n}\n","import React, { useState } from \"react\"\nimport { css } from \"emotion\"\n\nimport { Pills } from \"./pills\"\nimport { CopyButton } from \"./copy-button\"\n\nconst baseUrl = \"https://www.khanacademy.org/embed_video?v=\"\n\nconst createButton = (i, youtubeId) => `\n  <button\n    onclick=\"changeVideo('${baseUrl + youtubeId}')\"\n    style=\"\n      background: #5cb85c;\n      border: thin solid #4cae4c;\n      border-radius: 5px;\n      padding: 5px 9px;\n      margin: 0 3px;\n      color: #fff;\n    \"\n  >\n    Video ${i}\n  </button>\n`\n\nexport const CodeContainer = ({ selected }) => {\n  return (\n    <div\n      className={css`\n        width: 60%;\n        text-align: left;\n        padding: 10px;\n      `}\n    >\n      {selected.length === 0 ? (\n        <h1>Please select a video</h1>\n      ) : (\n        <Pills\n          tabs={[\n            { id: \"code\", name: \"Code\" },\n            { id: \"rendered\", name: \"Rendered Code\" },\n          ]}\n          render={view =>\n            view === \"code\" ? (\n              <Code selected={selected} />\n            ) : (\n              <RenderedCode selected={selected} />\n            )\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nconst Code = ({ selected }) => {\n  const renderString = `\n<div>\n    <iframe\n    id=\"kaskill-ka-player\"\n    style=\"width:853px;height:480px;border:none;background-color:ghostwhite;margin:auto;\"\n    scrolling=\"no\"\n    src=\"https://www.khanacademy.org/embed_video?v=${selected[0]}\"\n    ></iframe>\n</div>\n<div>\n    ${selected.map((video, i) => createButton(i + 1, video)).join(\"\")}\n</div>\n<script type=\"text/javascript\">\n    function changeVideo(url){\n        document.getElementById(\"kaskill-ka-player\").src = url;\n    }\n</script>\n`\n  return (\n    <>\n      <CopyButton str={renderString} />\n      <pre style={{ fontFamily: \"monospace\" }}>{renderString}</pre>\n    </>\n  )\n}\n\nconst RenderedCode = ({ selected }) => {\n  const [view, setView] = useState(selected[0])\n  return (\n    <div>\n      <div>\n        <iframe\n          id=\"kaskill-ka-player\"\n          style={{\n            width: \"853px\",\n            height: \"480px\",\n            border: \"none\",\n            backgroundColor: \"ghostwhite\",\n            margin: \"auto\",\n          }}\n          scrolling=\"no\"\n          src={baseUrl + view}\n        />\n      </div>\n      <div>\n        {selected.map((video, i) => (\n          <button\n            key={video}\n            onClick={() => setView(video)}\n            className={css`\n              background: #5cb85c;\n              border: thin solid #4cae4c;\n              border-radius: 5px;\n              padding: 5px 9px;\n              margin: 0 3px;\n              color: #fff;\n            `}\n          >\n            Video {i + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { css } from \"emotion\"\n\nimport { Navbar } from \"./components/navbar\"\nimport { Sidebar } from \"./components/sidebar\"\nimport { CodeContainer } from \"./components/code-container\"\nimport { DataProvider, DataContext } from \"./contexts/data-context\"\nimport \"./styles.css\"\n\nconst App = () => {\n  const [selected, setSelected] = useState([])\n\n  return (\n    <div>\n      <Navbar />\n      <div\n        className={css`\n          display: flex;\n          min-height: calc(100vh - 50px);\n          background: #eee;\n          text-align: left;\n        `}\n      >\n        <Sidebar selectHandler={setSelected} selected={selected} />\n        <CodeContainer selected={selected} />\n      </div>\n    </div>\n  )\n}\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n  <DataProvider>\n    <App />\n  </DataProvider>,\n  rootElement\n)\n"],"sourceRoot":""}