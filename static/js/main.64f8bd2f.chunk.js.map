{"version":3,"sources":["components/navbar.js","lib/utils.js","contexts/data-context.js","components/sidebar.js","lib/hooks.js","components/pills.js","components/copy-button.js","components/code-container.js","index.js"],"names":["Navbar","react_default","a","createElement","className","css","_templateObject","fetchVideos","fetch","then","res","json","parseVideoData","data","Array","isArray","reduce","acc","child","children","Object","objectSpread","kind","defineProperty","youtube_id","title","catch","err","DataContext","React","createContext","videoClass","sidebar_templateObject","addVideoClass","_templateObject2","Sidebar","_useState","useState","_useState2","slicedToArray","keyword","setKeyword","_useVideos","initialState","JSON","parse","localStorage","getItem","videos","setVideos","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","isCurrent","setItem","stringify","refreshVideos","useVideos","_useContext","useContext","selectedVideos","setSelectedVideos","videoList","entries","_ref","_ref2","key","toLowerCase","includes","push","slice","map","_ref3","data-testid","onClick","toConsumableArray","concat","selectedVideosList","filter","v","_templateObject3","Fragment","length","style","height","border","background","display","marginRight","_templateObject4","onChange","e","target","value","placeholder","type","_templateObject5","listPill","pills_templateObject","selected","pills_templateObject2","Pills","render","tabs","id","view","setView","listStyle","flexDirection","width","tab","pills_templateObject3","name","margin","CopyButton","str","copied","setCopied","setTimeout","copy_button_templateObject","el","document","setAttribute","position","left","body","appendChild","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","copyToClipboard","copy_button_templateObject2","baseUrl","createCodeString","video","i","youtubeId","createButton","join","CodeContainer","code_container_templateObject","pills_Pills","code_container_Code","code_container_RenderedCode","Code","renderString","copy_button_CopyButton","fontFamily","RenderedCode","backgroundColor","scrolling","src","code_container_templateObject2","rootElement","getElementById","ReactDOM","Provider","navbar_Navbar","src_templateObject","sidebar_Sidebar","code_container_CodeContainer"],"mappings":"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","file":"static/js/main.64f8bd2f.chunk.js","sourcesContent":["import React from \"react\"\nimport { css } from \"emotion\"\n\nexport const Navbar = () => (\n  <div\n    className={css`\n      background: #e91e63;\n      color: #fff;\n      width: 100%;\n      height: 50px;\n      line-height: 50px;\n      font-size: 30px;\n      font-family: monospace;\n      text-align: center;\n    `}\n  >\n    Khan Video Linker\n  </div>\n)\n","export const parseVideoData = data => {\n  if (Array.isArray(data)) {\n    return data.reduce((acc, child) => {\n      if (child.children) {\n        return { ...acc, ...parseVideoData(child.children) }\n      } else if (child.kind === \"Video\") {\n        return {\n          ...acc,\n          [child.youtube_id]: child.title,\n        }\n      }\n      return acc\n    }, {})\n  }\n\n  if (data.children) {\n    return parseVideoData(data.children)\n  }\n\n  if (data.kind === \"Video\") {\n    return {\n      [data.youtube_id]: data.title,\n    }\n  }\n}\n\nexport const fetchVideos = () => {\n  const url = \"https://jgilgen.pythonanywhere.com/api/v1/topictree?kind=Video\"\n  return fetch(url)\n    .then(res => res.json())\n    .then(json => parseVideoData(json))\n    .catch(err => {\n      throw err\n    })\n}\n\n// source https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\nexport const copyToClipboard = str => {\n  const el = document.createElement(\"textarea\") // Create a <textarea> element\n  el.value = str // Set its value to the string that you want copied\n  el.setAttribute(\"readonly\", \"\") // Make it readonly to be tamper-proof\n  el.style.position = \"absolute\"\n  el.style.left = \"-9999px\" // Move outside the screen to make it invisible\n  document.body.appendChild(el) // Append the <textarea> element to the HTML document\n  const selected =\n    document.getSelection().rangeCount > 0 // Check if there is any content selected previously\n      ? document.getSelection().getRangeAt(0) // Store selection if found\n      : false // Mark as false to know no selection existed before\n  el.select() // Select the <textarea> content\n  document.execCommand(\"copy\") // Copy - only works as a result of a user action (e.g. click events)\n  document.body.removeChild(el) // Remove the <textarea> element\n  if (selected) {\n    // If a selection existed before copying\n    document.getSelection().removeAllRanges() // Unselect everything on the HTML document\n    document.getSelection().addRange(selected) // Restore the original selection\n  }\n}\n","import React, { useState } from \"react\"\n\nconst DataContext = React.createContext({})\n\nconst DataProvider = ({ children }) => {\n  const [selectedVideos, setSelectedVideos] = useState([])\n  return (\n    <DataContext.Provider\n      value={{\n        selectedVideos,\n        setSelectedVideos,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nexport { DataContext, DataProvider }\n","import React, { useState, useContext } from \"react\"\nimport { css } from \"emotion\"\n\nimport { useVideos } from \"../lib/hooks\"\nimport { DataContext } from \"../contexts/data-context\"\n\nconst videoClass = css`\n  color: #e91e63;\n  margin: 10px 0;\n  cursor: pointer;\n  font-family: monospace;\n`\nconst addVideoClass = css`\n  width: 20px;\n  height: 20px;\n  color: #fff;\n  background: #e91e63;\n  float: right;\n  font-size: 20px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const Sidebar = () => {\n  const [keyword, setKeyword] = useState(\"\")\n  const { videos, loading, error, refreshVideos } = useVideos()\n  const { selectedVideos, setSelectedVideos } = useContext(DataContext)\n\n  // Use these to populate the two sidebar areas\n  const filteredVideos = Object.entries(videos).reduce((acc, [key, title]) => {\n    const hasSubstring = title.toLowerCase().includes(keyword.toLowerCase())\n    if (hasSubstring && !selectedVideos.includes(key)) {\n      acc.push({ key, title })\n    }\n\n    return acc\n  }, [])\n\n  const videoList = filteredVideos.slice(0, 10).map(({ key, title }) => (\n    <div\n      key={key}\n      data-testid={key}\n      className={videoClass}\n      onClick={() => {\n        if (!selectedVideos.includes(key)) {\n          setSelectedVideos([...selectedVideos, key])\n        }\n      }}\n    >\n      {title}\n      <div className={addVideoClass}>+</div>\n    </div>\n  ))\n\n  const selectedVideosList = selectedVideos.map(key => (\n    <div\n      key={key}\n      className={videoClass}\n      onClick={() => setSelectedVideos(selectedVideos.filter(v => v !== key))}\n    >\n      {videos[key]}\n      <div className={addVideoClass}>-</div>\n    </div>\n  ))\n\n  return (\n    <div\n      className={css`\n        width: 40%;\n        background: #fff;\n        padding: 10px;\n      `}\n    >\n      {loading ? (\n        <h2>\n          Retrieving video list from Khan Academy.\n          <br /> This could take a minute ...\n        </h2>\n      ) : error ? (\n        <h2>{error}</h2>\n      ) : (\n        <>\n          {selectedVideosList.length > 0 && (\n            <div data-testid=\"selected-videos\">\n              <h4>Selected Videos</h4>\n              <div data-testid=\"video-list\">{selectedVideosList}</div>\n              <hr\n                style={{\n                  height: 3,\n                  border: \"none\",\n                  background: \"#b0003a\",\n                }}\n              />\n            </div>\n          )}\n          <div>\n            <h4 style={{ display: \"inline-block\", marginRight: 20 }}>\n              Video finder\n            </h4>\n            <button\n              className={css`\n                display: inline-block;\n                background: #e91e63;\n                border: none;\n                color: #fff;\n                padding: 5px 7px;\n                border-radius: 5px;\n                font-family: monospace;\n                font-size: 1em;\n              `}\n              onClick={refreshVideos}\n            >\n              Refresh List\n            </button>\n          </div>\n          <input\n            onChange={e => setKeyword(e.target.value)}\n            value={keyword}\n            placeholder=\"Type to find a video\"\n            type=\"text\"\n            className={css`\n              border: none;\n              border-bottom: thick solid #e91e63;\n              width: 90%;\n              margin: 10px 0;\n            `}\n          />\n          <div data-testid=\"video-list\">{videoList}</div>\n        </>\n      )}\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\"\nimport { fetchVideos } from \"./utils\"\n\nexport const useVideos = () => {\n  const initialState = JSON.parse(localStorage.getItem(\"videos\"))\n  const [videos, setVideos] = useState(initialState)\n  const [loading, setLoading] = useState(videos === null)\n  const [error, setError] = useState(false)\n\n  const refreshVideos = () => {\n    setLoading(true)\n    setVideos(null)\n    setError(false)\n  }\n\n  useEffect(() => {\n    let isCurrent = true\n    if (videos === null) {\n      fetchVideos()\n        .then(videos => {\n          if (isCurrent) {\n            localStorage.setItem(\"videos\", JSON.stringify(videos))\n            setVideos(videos)\n            setLoading(false)\n            setError(false)\n          }\n        })\n        .catch(() => {\n          setVideos([])\n          setLoading(false)\n          setError(\"Error fetching videos!\")\n        })\n    }\n\n    return () => {\n      isCurrent = false\n    }\n  }, [videos])\n\n  return {\n    videos: videos === null ? {} : videos,\n    refreshVideos,\n    loading,\n    error,\n  }\n}\n","import React, { useState } from \"react\"\nimport { css } from \"emotion\"\n\nconst listPill = css`\n  display: inline-block;\n  margin: 0 10px;\n  position: relative;\n  padding: 0 0 5px 0;\n  cursor: pointer;\n`\n\nconst selected = css`\n  font-weight: bold;\n  color: #b0003a;\n  &:after {\n    content: \" \";\n    position: absolute;\n    width: 0;\n    height: 15px;\n    border-left: 7px solid transparent;\n    border-right: 7px solid transparent;\n    border-bottom: 7px solid #b0003a;\n    left: 50%;\n    margin-left: -7px;\n    bottom: -3px;\n    display: block;\n  }\n`\n\nexport const Pills = ({ render, tabs }) => {\n  const [view, setView] = useState(tabs[0].id)\n\n  return (\n    <>\n      <div\n        style={{\n          listStyle: \"none\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n        }}\n      >\n        {tabs.map(tab => (\n          <li\n            key={tab.id}\n            className={css`\n              ${listPill};\n              ${view === tab.id && selected};\n            `}\n            onClick={() => setView(tab.id)}\n          >\n            {tab.name}\n          </li>\n        ))}\n      </div>\n      <hr\n        style={{\n          margin: 0,\n          height: 3,\n          background: \"#b0003a\",\n          width: \"100%\",\n          border: \"none\",\n        }}\n      />\n      {render(view)}\n    </>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { css } from \"emotion\"\n\nimport { copyToClipboard } from \"../lib/utils\"\n\nexport const CopyButton = ({ str }) => {\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => setCopied(false), 1000)\n    }\n  })\n\n  return (\n    <button\n      className={css`\n        display: inline-block;\n        background: #e91e63;\n        border: none;\n        color: #fff;\n        padding: 5px 7px;\n        border-radius: 5px;\n        font-family: monospace;\n        font-size: 1em;\n        float: right;\n        margin: 7px;\n        width: 150px;\n      `}\n      onClick={() => {\n        copyToClipboard(str)\n        setCopied(true)\n      }}\n    >\n      <span\n        className={css`\n          transition: opacity 3s cubic-bezier(0.02, 1.24, 0.27, 0.93);\n          opacity: ${copied ? 0.5 : 1};\n        `}\n      >\n        {copied ? \"copied\" : \"copy to clipboard\"}\n      </span>\n    </button>\n  )\n}\n","import React, { useState, useContext } from \"react\"\nimport { css } from \"emotion\"\n\nimport { DataContext } from \"../contexts/data-context\"\n\nimport { Pills } from \"./pills\"\nimport { CopyButton } from \"./copy-button\"\n\nconst baseUrl = \"https://www.khanacademy.org/embed_video?v=\"\n\nexport const createButton = (i, youtubeId) => `\n  <button\n    onclick=\"changeVideo('${baseUrl + youtubeId}')\"\n    style=\"\n      background: #5cb85c;\n      border: thin solid #4cae4c;\n      border-radius: 5px;\n      padding: 5px 9px;\n      margin: 0 3px;\n      color: #fff;\n    \"\n  >\n    Video ${i}\n  </button>\n`\n\nexport const createCodeString = selected => `\n<div>\n    <iframe\n    title=\"khan video player\"\n    id=\"kaskill-ka-player\"\n    style=\"width:853px;height:480px;border:none;background-color:ghostwhite;margin:auto;\"\n    scrolling=\"no\"\n    src=\"https://www.khanacademy.org/embed_video?v=${selected[0]}\"\n    ></iframe>\n</div>\n<div>\n    ${selected.map((video, i) => createButton(i + 1, video)).join(\"\")}\n</div>\n<script type=\"text/javascript\">\n    function changeVideo(url){\n        document.getElementById(\"kaskill-ka-player\").src = url;\n    }\n</script>\n`\n\nexport const CodeContainer = () => {\n  const { selectedVideos } = useContext(DataContext)\n  return (\n    <div\n      className={css`\n        width: 60%;\n        text-align: left;\n        padding: 10px;\n      `}\n    >\n      {selectedVideos.length === 0 ? (\n        <h1>Please select a video</h1>\n      ) : (\n        <Pills\n          tabs={[\n            { id: \"code\", name: \"Code\" },\n            { id: \"rendered\", name: \"Rendered Code\" },\n          ]}\n          render={view =>\n            view === \"code\" ? (\n              <Code selected={selectedVideos} />\n            ) : (\n              <RenderedCode selected={selectedVideos} />\n            )\n          }\n        />\n      )}\n    </div>\n  )\n}\n\nexport const Code = ({ selected }) => {\n  const renderString = createCodeString(selected)\n  return (\n    <>\n      <CopyButton str={renderString} />\n      <pre data-testid=\"code-string\" style={{ fontFamily: \"monospace\" }}>\n        {renderString}\n      </pre>\n    </>\n  )\n}\n\nconst RenderedCode = ({ selected }) => {\n  const [view, setView] = useState(selected[0])\n  return (\n    <div>\n      <div>\n        <iframe\n          id=\"kaskill-ka-player\"\n          title=\"khan video player\"\n          style={{\n            width: \"853px\",\n            height: \"480px\",\n            border: \"none\",\n            backgroundColor: \"ghostwhite\",\n            margin: \"auto\",\n          }}\n          scrolling=\"no\"\n          src={baseUrl + view}\n        />\n      </div>\n      <div>\n        {selected.map((video, i) => (\n          <button\n            key={video}\n            onClick={() => setView(video)}\n            className={css`\n              background: #5cb85c;\n              border: thin solid #4cae4c;\n              border-radius: 5px;\n              padding: 5px 9px;\n              margin: 0 3px;\n              color: #fff;\n            `}\n          >\n            Video {i + 1}\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { css } from \"emotion\"\n\nimport { Navbar } from \"./components/navbar\"\nimport { Sidebar } from \"./components/sidebar\"\nimport { CodeContainer } from \"./components/code-container\"\nimport { DataProvider } from \"./contexts/data-context\"\nimport \"./styles.css\"\n\nconst App = () => (\n  <>\n    <Navbar />\n    <div\n      className={css`\n        display: flex;\n        min-height: calc(100vh - 50px);\n        background: #eee;\n        text-align: left;\n      `}\n    >\n      <Sidebar />\n      <CodeContainer />\n    </div>\n  </>\n)\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n  <DataProvider>\n    <App />\n  </DataProvider>,\n  rootElement\n)\n"],"sourceRoot":""}